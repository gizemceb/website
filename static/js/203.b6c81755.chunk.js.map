{"version":3,"file":"static/js/203.b6c81755.chunk.js","mappings":"6QAWe,SAASA,IAEpB,IAAMC,EAAeC,EAAAA,KAAaC,MAAM,CACpCC,UAAWF,EAAAA,KACNG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdC,SAAUN,EAAAA,KACLG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdE,QAASP,EAAAA,KACJG,IAAI,EAAG,cACPE,SAAS,YACdG,MAAOR,EAAAA,KAAaQ,MAAM,iBAAiBH,SAAS,cAGxD,SAASI,EAAUC,EAAaC,GAC5B,IAAIC,EAAAA,EAAAA,IAAMF,EAAQC,GACd,MAAO,CACHE,OAAQ,gBAGnB,CAED,OACI,+BACI,UAAC,KAAD,CACIC,MAAM,OACNC,OAAQ,OACRF,OAAO,MACPG,YAAY,WACZC,SAAU,WALd,WAMA,SAAC,KAAD,WACI,SAAC,KAAD,CACIC,SAAS,MACTC,WAAW,MACXC,GAAG,KACHC,EAAE,OACFC,WAAW,IACXC,WAAY,kBACZN,SAAU,WACVO,OAAQ,EACRC,cAAe,OACfC,YAAa,OAVjB,UAWI,SAACC,EAAA,EAAD,CAAOC,QAAQ,yBAGvB,SAAC,KAAD,CACIP,EAAG,OACHQ,eAAgB,SAChBd,OAAQ,OACRe,WAAY,WACZL,cAAe,OACfR,SAAU,WACVc,GAAI,UACJC,aAAc,OACdC,UAAW,sBATf,UAWA,SAAC,KAAD,CACIC,cAAe,CACX1B,MAAO,GACPN,UAAW,GACXI,SAAU,GACVC,QAAS,IAEb4B,iBAAkBpC,EAClBqC,SAAU,SAACC,IACPC,EAAAA,EAAAA,IACI,kBACA,mBACAD,EACA,qBAECE,MAAK,SAACC,GAEHC,QAAQC,IAAI,WAAYF,EAASG,OAAQH,EAASI,KACrD,IACAC,OAAM,SAACC,GACJL,QAAQC,IAAI,YAAaI,EAC5B,GACR,EAtBL,SAyBK,gBAAEC,EAAF,EAAEA,aAAcrC,EAAhB,EAAgBA,OAAhB,EAAwBsC,QAAxB,OACG,iBAAMZ,SAAUW,EAAhB,UACI,UAAC,KAAD,CAAQE,QAAS,EAAGnB,WAAY,CAACoB,KAAK,UAAtC,WACI,UAAC,KAAD,YACI,UAAC,KAAD,CAAMC,cAAe,SAArB,WACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAWC,QAAQ,QAAnB,UACI,SAACzB,EAAA,EAAD,CAAOC,QAAQ,qBAEnB,SAAC,KAAD,CACIyB,GAAIC,EAAAA,GACJC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,QAAQ,SACRrC,EAAG,IACHsC,MAAOlD,EAAUC,EAAO,eAIhC,UAAC,KAAD,YACI,SAAC,KAAD,CAAW0C,QAAQ,YAAnB,UACI,SAACzB,EAAA,EAAD,CAAOC,QAAQ,yBAEnB,SAAC,KAAD,CACIyB,GAAIC,EAAAA,GACJC,GAAG,YACHC,KAAK,YACLC,KAAK,OACLC,QAAQ,SACRrC,EAAG,IACHsC,MAAOlD,EAAUC,EAAO,mBAIhC,UAAC,KAAD,YACI,SAAC,KAAD,CAAW0C,QAAQ,WAAnB,UACI,SAACzB,EAAA,EAAD,CAAOC,QAAQ,wBAEnB,SAAC,KAAD,CACIyB,GAAIC,EAAAA,GACJC,GAAG,WACHC,KAAK,WACLC,KAAK,OACLC,QAAQ,SACRrC,EAAG,IACHsC,MAAOlD,EAAUC,EAAO,qBAKpC,UAAC,KAAD,YACI,SAAC,KAAD,CAAW0C,QAAQ,UAAnB,UACI,SAACzB,EAAA,EAAD,CAAOC,QAAQ,2BAEnB,SAAC,KAAD,CAAKF,YAAa,OAAlB,UACI,SAAC,KAAD,CACI2B,GAAIO,EAAAA,EACJL,GAAG,UACHC,KAAK,UACLC,KAAK,OACLC,QAAQ,SACRC,MAAOlD,EAAUC,EAAO,WACxBK,OAAQ,OACRM,EAAG,eAMnB,SAAC,KAAD,CAAQoC,KAAK,SAASI,YAAY,SAAS/C,MAAM,OAAjD,UACI,SAACa,EAAA,EAAD,CAAOC,QAAQ,uBAvE9B,UAiFhB,C,cC5KM,SAASkC,IAGZ,OACI,UAAC,KAAD,YACI,UAAC,KAAD,CAAKC,GAAG,IAAR,WACI,SAAC,KAAD,CAAMC,KAAM,8BAAZ,UACI,SAAC,KAAD,CACIhC,aAAa,OACbiC,QAAQ,OACRC,IAAI,iCACJC,IAAI,mCAGZ,SAAC,KAAD,CAAMhD,WAAW,OAAjB,uBAGA,SAAC,KAAD,CAAMD,SAAS,KAAf,mCAEJ,UAAC,KAAD,CAAK6C,GAAG,IAAR,WACI,SAAC,KAAD,CAAMC,KAAM,8BAAZ,UACI,SAAC,KAAD,CACIhC,aAAa,OACbiC,QAAQ,OACRC,IAAI,8BACJC,IAAI,mCAGZ,SAAC,KAAD,CAAMhD,WAAW,OAAjB,uBAGA,SAAC,KAAD,CAAMD,SAAS,KAAf,oCAKf,CCjCc,SAASkD,KACNC,EAAAA,EAAAA,KAANC,EAER,OACI,SAAC,KAAD,CAAKjD,EAAG,CAAE6B,KAAM,OAAQqB,GAAI,QAAUC,EAAE,SAASC,GAAG,OAAO5D,OAAO,MAAMG,YAAY,QAApF,UACI,UAAC,KAAD,CAAMwD,EAAE,SAASE,GAAG,OAAO7C,eAAgB,SAAUhB,OAAO,MAAMG,YAAY,OAAOmC,cAAe,SAApG,WACI,SAAC,KAAD,WACI,SAACrD,EAAD,OAEJ,SAAC,KAAD,CAAM6E,WAAY,OAAlB,UACI,SAACb,EAAD,UAKnB,C","sources":["components/organisms/Contact/ContactForm.tsx","components/organisms/Badges/Badges.tsx","components/pages/Contact.tsx"],"sourcesContent":["import {\n    Box, Button,\n    Flex, FormControl, FormLabel,\n    Input, VStack, Text, Textarea\n} from \"@chakra-ui/react\";\nimport React from 'react'\nimport {Formik, Field, getIn} from \"formik\";\nimport * as Yup from 'yup';\nimport {Trans} from \"react-i18next\";\nimport { send } from 'emailjs-com';\n\nexport default function ContactForm() {\n\n    const SignupSchema = Yup.object().shape({\n        firstName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        lastName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        message: Yup.string()\n            .min(2, 'Too Short!')\n            .required('Required'),\n        email: Yup.string().email('Invalid email').required('Required'),\n    });\n\n    function getStyles(errors: any, fieldName: string) {\n        if (getIn(errors, fieldName)) {\n            return {\n                border: '1px solid red'\n            }\n        }\n    }\n\n    return (\n        <>\n            <Box\n                width=\"100%\"\n                height={\"30em\"}\n                border='1px'\n                borderColor='gray.200'\n                position={\"relative\"}>\n            <Flex>\n                <Text\n                    fontSize=\"2xl\"\n                    fontWeight=\"800\"\n                    mt=\"20\"\n                    w=\"100%\"\n                    lineHeight=\"1\"\n                    fontFamily={\"Source Code Pro\"}\n                    position={\"absolute\"}\n                    zIndex={1}\n                    paddingBottom={\"20px\"}\n                    paddingLeft={\"10px\"}>\n                    <Trans i18nKey=\"Contact.Message\" />\n                </Text>\n            </Flex>\n            <Flex\n                w={\"100%\"}\n                justifyContent={\"center\"}\n                height={\"32em\"}\n                alignItems={\"flex-end\"}\n                paddingBottom={\"30px\"}\n                position={\"absolute\"}\n                bg={\"#FAF7F0\"}\n                borderRadius={\"25px\"}\n                boxShadow={\"0 0 5px 5px #CBC3E3\"}\n            >\n            <Formik\n                initialValues={{\n                    email: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    message: \"\",\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={(values) => {\n                    send(\n                        'service_mpdk7b4',\n                        'template_09omxjv',\n                        values,\n                        'dbF9XEig3xE9x2TuG'\n                    )\n                        .then((response) => {\n                            // TODO: bak alert ekle\n                            console.log('SUCCESS!', response.status, response.text);\n                        })\n                        .catch((err) => {\n                            console.log('FAILED...', err);\n                        });\n                }}\n            >\n\n                {({handleSubmit, errors, touched}) => (\n                    <form onSubmit={handleSubmit}>\n                        <VStack spacing={4} alignItems={{base:\"center\"}} >\n                            <Flex>\n                                <Flex flexDirection={\"column\"}>\n                                    <FormControl>\n                                        <FormLabel htmlFor=\"email\">\n                                            <Trans i18nKey=\"Contact.Email\"/>\n                                        </FormLabel>\n                                        <Field\n                                            as={Input}\n                                            id=\"email\"\n                                            name=\"email\"\n                                            type=\"email\"\n                                            variant=\"filled\"\n                                            w={400}\n                                            style={getStyles(errors,'email')}\n                                        />\n                                        { /*errors.email && touched.email ? <div>{errors.email}</div> : null */}\n                                    </FormControl>\n                                    <FormControl>\n                                        <FormLabel htmlFor=\"firstName\">\n                                            <Trans i18nKey=\"Contact.FirstName\"/>\n                                        </FormLabel>\n                                        <Field\n                                            as={Input}\n                                            id=\"firstName\"\n                                            name=\"firstName\"\n                                            type=\"text\"\n                                            variant=\"filled\"\n                                            w={400}\n                                            style={getStyles(errors,'firstName')}\n                                        />\n                                        { /*errors.firstName && touched.firstName ? <div>{errors.firstName}</div> : null */}\n                                    </FormControl>\n                                    <FormControl>\n                                        <FormLabel htmlFor=\"lastName\">\n                                            <Trans i18nKey=\"Contact.LastName\"/>\n                                        </FormLabel>\n                                        <Field\n                                            as={Input}\n                                            id=\"lastName\"\n                                            name=\"lastName\"\n                                            type=\"text\"\n                                            variant=\"filled\"\n                                            w={400}\n                                            style={getStyles(errors,'lastName')}\n                                        />\n                                        { /*errors.lastName && touched.lastName ? <div>{errors.lastName}</div> : null */}\n                                    </FormControl>\n                                </Flex>\n                                <FormControl>\n                                    <FormLabel htmlFor=\"message\">\n                                        <Trans i18nKey=\"Contact.MailMessage\"/>\n                                    </FormLabel>\n                                    <Box paddingLeft={\"10px\"}>\n                                        <Field\n                                            as={Textarea}\n                                            id=\"message\"\n                                            name=\"message\"\n                                            type=\"text\"\n                                            variant=\"filled\"\n                                            style={getStyles(errors,'message')}\n                                            height={\"10em\"}\n                                            w={500}\n                                        />\n                                    </Box>\n                                </FormControl>\n                            </Flex>\n\n                            <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n                                <Trans i18nKey=\"Contact.Send\"/>\n                            </Button>\n                        </VStack>\n                    </form>\n                )}\n            </Formik>\n            </Flex>\n            </Box>\n        </>\n    );\n}\n\n","import {Box, Flex, Text, Badge, Avatar, Image, Link} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {Trans} from \"react-i18next\";\n\nexport function Badges() {\n\n    // TODO: düzelt\n    return (\n        <Flex>\n            <Box ml='3'>\n                <Link href={\"https://github.com/gizemceb\"}>\n                    <Image\n                        borderRadius='full'\n                        boxSize='70px'\n                        src='/assets/images/github-mark.png'\n                        alt='https://github.com/gizemceb'\n                    />\n                </Link>\n                <Text fontWeight='bold'>\n                    gizemceb\n                </Text>\n                <Text fontSize='sm'>Software Engineer</Text>\n            </Box>\n            <Box ml='3'>\n                <Link href={\"https://github.com/gizemceb\"}>\n                    <Image\n                        borderRadius='full'\n                        boxSize='70px'\n                        src='/assets/images/Linkedin.png'\n                        alt='https://github.com/gizemceb'\n                    />\n                </Link>\n                <Text fontWeight='bold'>\n                    gizemceb\n                </Text>\n                <Text fontSize='sm'>Software Engineer</Text>\n            </Box>\n        </Flex>\n\n    );\n}\n","import {Box, Flex, FlexProps} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport ContactForm from \"../organisms/Contact/ContactForm\";\nimport {Badges} from \"../organisms/Badges/Badges\";\n\n\nexport default function Contact() {\n    const { t } = useTranslation();\n\n    return (\n        <Box w={{ base: \"auto\", lg: \"62em\" }} m=\"0 auto\" pt=\"10em\" border='1px' borderColor='black'>\n            <Flex m=\"0 auto\" pb=\"30em\" justifyContent={\"center\"} border='1px' borderColor='blue' flexDirection={\"column\"}>\n                <Flex>\n                    <ContactForm/>\n                </Flex>\n                <Flex paddingTop={\"10em\"}>\n                    <Badges/>\n                </Flex>\n            </Flex>\n        </Box>\n    );\n}\n"],"names":["ContactForm","SignupSchema","Yup","shape","firstName","min","max","required","lastName","message","email","getStyles","errors","fieldName","getIn","border","width","height","borderColor","position","fontSize","fontWeight","mt","w","lineHeight","fontFamily","zIndex","paddingBottom","paddingLeft","Trans","i18nKey","justifyContent","alignItems","bg","borderRadius","boxShadow","initialValues","validationSchema","onSubmit","values","send","then","response","console","log","status","text","catch","err","handleSubmit","touched","spacing","base","flexDirection","htmlFor","as","Input","id","name","type","variant","style","Textarea","colorScheme","Badges","ml","href","boxSize","src","alt","Contact","useTranslation","t","lg","m","pt","pb","paddingTop"],"sourceRoot":""}