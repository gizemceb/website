{"version":3,"file":"static/js/216.a861e319.chunk.js","mappings":"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","sources":["components/organisms/Contact/ContactForm.tsx","components/molecules/index.tsx","components/molecules/BadgeItem.tsx","components/organisms/Badges/Badges.tsx","components/pages/Contact.tsx"],"sourcesContent":["import {\n    Box, Button,\n    Flex, FormControl, FormLabel,\n    Input, VStack, Text, Textarea\n} from \"@chakra-ui/react\";\nimport React from 'react'\nimport {Formik, Field, getIn} from \"formik\";\nimport * as Yup from 'yup';\nimport {Trans} from \"react-i18next\";\nimport { send } from 'emailjs-com';\n\nexport default function ContactForm() {\n\n    const SignupSchema = Yup.object().shape({\n        firstName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        lastName: Yup.string()\n            .min(2, 'Too Short!')\n            .max(50, 'Too Long!')\n            .required('Required'),\n        message: Yup.string()\n            .min(2, 'Too Short!')\n            .required('Required'),\n        email: Yup.string().email('Invalid email').required('Required'),\n    });\n\n    function getStyles(errors: any, fieldName: string) {\n        if (getIn(errors, fieldName)) {\n            return {\n                border: '1px solid red'\n            }\n        }\n    }\n\n    return (\n        <>\n            <Box\n                width=\"100%\"\n                height={\"30em\"}\n                position={\"relative\"}>\n            <Flex>\n                <Text\n                    fontSize=\"2xl\"\n                    fontWeight=\"800\"\n                    mt=\"20\"\n                    w=\"100%\"\n                    lineHeight=\"1\"\n                    fontFamily={\"Source Code Pro\"}\n                    position={\"absolute\"}\n                    zIndex={1}\n                    paddingBottom={\"20px\"}\n                    paddingLeft={\"10px\"}>\n                    <Trans i18nKey=\"Contact.Message\" />\n                </Text>\n            </Flex>\n            <Flex\n                w={\"100%\"}\n                justifyContent={\"center\"}\n                height={\"32em\"}\n                alignItems={\"flex-end\"}\n                paddingBottom={\"30px\"}\n                position={\"absolute\"}\n                bg={\"#FAF7F0\"}\n                borderRadius={\"25px\"}\n                boxShadow={\"0 0 5px 5px #CBC3E3\"}\n            >\n            <Formik\n                initialValues={{\n                    email: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    message: \"\",\n                }}\n                validationSchema={SignupSchema}\n                onSubmit={(values) => {\n                    send(\n                        'service_mpdk7b4',\n                        'template_09omxjv',\n                        values,\n                        'dbF9XEig3xE9x2TuG'\n                    )\n                        .then((response) => {\n                            // TODO: bak alert ekle\n                            console.log('SUCCESS!', response.status, response.text);\n                        })\n                        .catch((err) => {\n                            console.log('FAILED...', err);\n                        });\n                }}\n            >\n\n                {({handleSubmit, errors, touched}) => (\n                    <form onSubmit={handleSubmit}>\n                        <VStack spacing={4} alignItems={{base:\"center\"}} >\n                            <Flex>\n                                <Flex flexDirection={\"column\"}>\n                                    <FormControl>\n                                        <FormLabel htmlFor=\"email\">\n                                            <Trans i18nKey=\"Contact.Email\"/>\n                                        </FormLabel>\n                                        <Field\n                                            as={Input}\n                                            id=\"email\"\n                                            name=\"email\"\n                                            type=\"email\"\n                                            variant=\"filled\"\n                                            w={400}\n                                            style={getStyles(errors,'email')}\n                                        />\n                                        { /*errors.email && touched.email ? <div>{errors.email}</div> : null */}\n                                    </FormControl>\n                                    <FormControl>\n                                        <FormLabel htmlFor=\"firstName\">\n                                            <Trans i18nKey=\"Contact.FirstName\"/>\n                                        </FormLabel>\n                                        <Field\n                                            as={Input}\n                                            id=\"firstName\"\n                                            name=\"firstName\"\n                                            type=\"text\"\n                                            variant=\"filled\"\n                                            w={400}\n                                            style={getStyles(errors,'firstName')}\n                                        />\n                                        { /*errors.firstName && touched.firstName ? <div>{errors.firstName}</div> : null */}\n                                    </FormControl>\n                                    <FormControl>\n                                        <FormLabel htmlFor=\"lastName\">\n                                            <Trans i18nKey=\"Contact.LastName\"/>\n                                        </FormLabel>\n                                        <Field\n                                            as={Input}\n                                            id=\"lastName\"\n                                            name=\"lastName\"\n                                            type=\"text\"\n                                            variant=\"filled\"\n                                            w={400}\n                                            style={getStyles(errors,'lastName')}\n                                        />\n                                        { /*errors.lastName && touched.lastName ? <div>{errors.lastName}</div> : null */}\n                                    </FormControl>\n                                </Flex>\n                                <FormControl>\n                                    <FormLabel htmlFor=\"message\">\n                                        <Trans i18nKey=\"Contact.MailMessage\"/>\n                                    </FormLabel>\n                                    <Box paddingLeft={\"10px\"}>\n                                        <Field\n                                            as={Textarea}\n                                            id=\"message\"\n                                            name=\"message\"\n                                            type=\"text\"\n                                            variant=\"filled\"\n                                            style={getStyles(errors,'message')}\n                                            height={\"10em\"}\n                                            w={500}\n                                        />\n                                    </Box>\n                                </FormControl>\n                            </Flex>\n\n                            <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n                                <Trans i18nKey=\"Contact.Send\"/>\n                            </Button>\n                        </VStack>\n                    </form>\n                )}\n            </Formik>\n            </Flex>\n            </Box>\n        </>\n    );\n}\n\n","import BadgeItem from './BadgeItem';\n\nexport default BadgeItem;\n","import {Box, Flex, Text, Image, Link} from \"@chakra-ui/react\";\nimport React from \"react\";\n\ninterface IData {\n    link: string,\n    picUrl: string,\n    text: string,\n    header: string,\n}\n\ninterface IBadgeList {\n    data?: IData[]\n}\n\nconst BadgeItem: React.FC<IBadgeList> = ({data}) => {\n    const renderBadges = () => {\n        return data?.map((item) => {\n            return (\n                <Box ml='3' margin=\"10px\">\n                    <Link href={item.link}>\n                        <Image\n                            display={\"block\"}\n                            marginLeft={\"auto\"}\n                            marginRight={\"auto\"}\n                            borderRadius='full'\n                            boxSize='50px'\n                            src={item.picUrl}\n                            alt={item.link}\n                        />\n                    </Link>\n                    <Text fontWeight='bold' align={\"center\"}>\n                        {item.header}\n                    </Text>\n                    <Text fontSize='sm'>{item.text}</Text>\n                </Box>\n            )\n        }) || null;\n    }\n    return (\n        <Flex  flexDirection={\"column\"} padding=\"30px\">\n            {renderBadges()}\n        </Flex>\n    );\n}\n\nexport default BadgeItem;\n\n// author is gizem cebi :D\n","import {Box, Flex, Image, Text} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {Trans, useTranslation} from \"react-i18next\";\nimport BadgeItem from \"../../molecules\";\n\n\nexport function Badges() {\n    const { t } = useTranslation();\n    return (\n        <Box\n            width=\"100%\"\n            height={\"30em\"}\n            border='1px'\n            borderColor='gray.200'\n            position={\"relative\"}>\n\n            <Flex  width=\"100%\">\n                <Image\n                    padding=\"40px\"\n                    borderRadius='full'\n                    boxSize='200px'\n                    src=\"/assets/images/profilepic.png\"\n                    position={\"absolute\"}\n                    zIndex={1}\n                />\n\n                <Text\n                    align=\"center\"\n                    fontSize=\"2xl\"\n                    fontWeight=\"800\"\n                    mt=\"20\"\n                    w=\"100%\"\n                    lineHeight=\"1\"\n                    fontFamily={\"Source Code Pro\"}\n                    position={\"absolute\"}\n                    zIndex={1}\n                    paddingTop={\"10px\"}>\n                    <Trans i18nKey=\"Contact.Info\" />\n                </Text>\n\n                <Text\n                    align=\"center\"\n                    fontSize=\"2xl\"\n                    fontWeight=\"800\"\n                    mt=\"20\"\n                    w=\"100%\"\n                    lineHeight=\"1\"\n                    fontFamily={\"Source Code Pro\"}\n                    position={\"absolute\"}\n                    zIndex={1}\n                    paddingTop={\"50px\"}>\n                    <Trans i18nKey=\"Contact.EmailAddress\" />\n                </Text>\n            </Flex>\n\n            <Flex w={\"100%\"}\n                  height={\"32em\"}\n                  alignItems={\"flex-end\"}\n                  paddingBottom={\"30px\"}\n                  position={\"absolute\"}\n                  bg={\"#FAF7F0\"}\n                  borderRadius={\"25px\"}\n                  boxShadow={\"0 0 5px 5px #CBC3E3\"}>\n                <BadgeItem data={[\n                    {\n                        picUrl: \"/assets/images/github.png\",\n                        link: \"https://github.com/gizemceb\",\n                        header: \"gizemceb\",\n                        text: t(\"Contact.PositionTitle\")\n                    },\n                    {\n                        picUrl: \"/assets/images/linkedin.png\",\n                        link: \"https://github.com/gizemceb\",\n                        header: \"gizemceb\",\n                        text: t(\"Contact.PositionTitle\")\n                    }\n                ]}/>\n            </Flex>\n        </Box>\n\n\n    );\n}\n","import {Box, Flex, Image} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport ContactForm from \"../organisms/Contact/ContactForm\";\nimport {Badges} from \"../organisms/Badges/Badges\";\n\n\nexport default function Contact() {\n    const {t} = useTranslation();\n\n    return (\n        <Box w={{base: \"auto\", lg: \"62em\"}} m=\"0 auto\" pt=\"10em\">\n            <Flex m=\"0 auto\" pb=\"30em\" justifyContent={\"center\"}\n                  flexDirection={\"column\"}>\n                <Flex>\n                    <ContactForm/>\n                </Flex>\n                <Flex m=\"0 auto\" pb=\"10em\" justifyContent={\"center\"}\n                      flexDirection={\"column\"} paddingTop={\"10em\"} width=\"100%\">\n                    <Badges/>\n                </Flex>\n            </Flex>\n        </Box>\n    );\n}\n"],"names":["ContactForm","SignupSchema","Yup","shape","firstName","min","max","required","lastName","message","email","getStyles","errors","fieldName","getIn","border","width","height","position","fontSize","fontWeight","mt","w","lineHeight","fontFamily","zIndex","paddingBottom","paddingLeft","Trans","i18nKey","justifyContent","alignItems","bg","borderRadius","boxShadow","initialValues","validationSchema","onSubmit","values","send","then","response","console","log","status","text","catch","err","handleSubmit","touched","spacing","base","flexDirection","htmlFor","as","Input","id","name","type","variant","style","Textarea","colorScheme","data","padding","map","item","ml","margin","href","link","display","marginLeft","marginRight","boxSize","src","picUrl","alt","align","header","Badges","t","useTranslation","borderColor","paddingTop","Contact","lg","m","pt","pb"],"sourceRoot":""}